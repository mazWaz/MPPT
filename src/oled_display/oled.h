#ifndef OLED_DISPLAY_H
#define OLED_DISPLAY_H
#include "config.h"
#include "./sensor/sensor_reading.h"
#include "./system_process/system_process.h"
#include "./device_protection/device_protection.h"
#include "./encoder/encoder.h"
#include "./wifi_man/wifi_man.h"

#include <Adafruit_SSD1306.h>
#include <Adafruit_GFX.h>

#include <Fonts/FreeMonoBold9pt7b.h>
#include <Fonts/FreeSerifItalic9pt7b.h>

typedef enum
{
    MAIN_MENUS,
    SETTING_MENUS
} MENU;

typedef enum
{
    INPUT_MENU,
    BATTERY_MENU,
    OUTPUT_MENU,
    SETTING_MENU
} MAIN_MENU;

typedef enum
{
    INPUT_MODE,
    CHARGING_MODE,
    BATTERY_MAX,
    BATTERY_MIN,
    CURRENT,
    FAN_SETTING,
    FAN_TEMPERATURE,
    SHUTDOWN_TEMPERATURE,
    WIFI_SETTING,
    FACTORY_RESET,
    EXIT
} SETTING;

class OledDisplay
{
public:
    OledDisplay(uint8_t scrren_width, uint8_t screen_height, uint8_t address);
    void setup(Encoder *encoders, SensorReading *sensors, SystemProcess *system_process, DeviceProtection *device_protections, WifiMan *_wifiMan);
    void displayMenu();

private:
    Encoder *encoder;
    SensorReading *sensor;
    SystemProcess *systemProcess;
    DeviceProtection *deviceProtection;
    WifiMan *wifiMan;

    bool initValue = false,
         selectedButton = false,
         saveTemp = false;
    unsigned long
        blinking = 0,
        prevLCDBackLMillis = 0;
    uint8_t
        oledAddress,
        menuPointer = 0;
    Adafruit_SSD1306 display;
    const uint8_t logoBattery[72] =
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x33, 0xe0, 0xfe, 0x73, 0xf0, 0xe0, 0xe0, 0x70, 0xc0, 0xe0, 0x30, 0xc1, 0xc0, 0x30, 0xc3, 0x80, 0x33, 0xc3, 0xfc, 0x33, 0xc3, 0xfc, 0x33, 0xc0, 0x38, 0x33, 0xc0, 0x38, 0x30, 0xc0, 0x70, 0x30, 0xe0, 0xe0, 0x70, 0xfc, 0xe7, 0xf0, 0x7c, 0xc7, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    const uint8_t logoInput[72] =
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x60, 0x07, 0x00, 0xe0, 0x03, 0x81, 0xc0, 0x01, 0xc3, 0x80, 0x00, 0xe7, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    const uint8_t logoOutput[72] =
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x7e, 0x00, 0x00, 0xe7, 0x00, 0x01, 0xc3, 0x80, 0x03, 0x81, 0xc0, 0x07, 0x00, 0xe0, 0x06, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    const uint8_t logoSettings[72] =
        {0x00, 0x3c, 0x00, 0x00, 0x7e, 0x00, 0x00, 0x6e, 0x40, 0x1f, 0xe7, 0xf8, 0x1f, 0xe7, 0xf8, 0x39, 0xc3, 0x9c, 0x38, 0x00, 0x18, 0x1c, 0x00, 0x38, 0x1c, 0x7e, 0x38, 0x7c, 0xff, 0x3e, 0xf8, 0xe7, 0x1f, 0xe0, 0xc3, 0x07, 0xc0, 0xc3, 0x07, 0xf8, 0xe7, 0x1f, 0x7c, 0xff, 0x3e, 0x1c, 0x7e, 0x38, 0x1c, 0x00, 0x38, 0x18, 0x00, 0x1c, 0x39, 0xc3, 0x9c, 0x1f, 0xe7, 0xf8, 0x1f, 0xe7, 0xf8, 0x06, 0x76, 0x20, 0x00, 0x7e, 0x00, 0x00, 0x3c, 0x00};
    const uint8_t logoSupplyAlorithm[72] =
        {0x00, 0xc3, 0x00, 0x00, 0xc3, 0x00, 0x00, 0xc3, 0x00, 0x0f, 0xff, 0xf0, 0x1f, 0xff, 0xf8, 0x18, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x18, 0xf8, 0xff, 0x1f, 0xf8, 0xff, 0x1f, 0x18, 0xc3, 0x18, 0x18, 0xc3, 0x18, 0x18, 0xc3, 0x18, 0xf8, 0xc3, 0x1f, 0xf8, 0xff, 0x1f, 0x18, 0xff, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x18, 0x18, 0x00, 0x18, 0x1f, 0xff, 0xf8, 0x0f, 0xff, 0xf0, 0x00, 0xc3, 0x00, 0x00, 0xc3, 0x00, 0x00, 0xc3, 0x00};
    const uint8_t logoExit[72] =
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0xc0, 0x18, 0x01, 0xc0, 0x18, 0x03, 0x80, 0x18, 0x07, 0x00, 0x38, 0x0e, 0x00, 0x78, 0x1f, 0xff, 0xf0, 0x1f, 0xff, 0xe0, 0x0e, 0x00, 0x00, 0x07, 0x00, 0x00, 0x03, 0x80, 0x00, 0x01, 0xc0, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    const uint8_t logoChargingMode[72] =
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0xc0, 0x00, 0x01, 0xe0, 0x00, 0x01, 0xe0, 0x00, 0x01, 0xe0, 0x00, 0x03, 0xf0, 0x00, 0x03, 0x30, 0x00, 0x03, 0x30, 0x00, 0x07, 0x38, 0x00, 0x7e, 0x18, 0x7e, 0x7e, 0x18, 0x7e, 0x00, 0x1c, 0xe0, 0x00, 0x0c, 0xc0, 0x00, 0x0c, 0xc0, 0x00, 0x0f, 0xc0, 0x00, 0x07, 0x80, 0x00, 0x07, 0x80, 0x00, 0x07, 0x80, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    const uint8_t logoBatteryMaxMin[72] =
        {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xe0, 0xff, 0xff, 0xf0, 0xc0, 0x00, 0x30, 0xc0, 0x00, 0x30, 0xc0, 0x00, 0x30, 0xc0, 0x00, 0x33, 0xc0, 0x00, 0x33, 0xc0, 0x00, 0x33, 0xc0, 0x00, 0x33, 0xc0, 0x00, 0x30, 0xc0, 0x00, 0x30, 0xc0, 0x00, 0x30, 0xff, 0xff, 0xf0, 0x7f, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
    const uint8_t currentLogo[72] =
        {0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x7c, 0x00, 0x00, 0x7c, 0x00, 0x00, 0xfc, 0x00, 0x01, 0xdc, 0x00, 0x03, 0x9c, 0x00, 0x07, 0x1f, 0xfc, 0x0e, 0x1f, 0xfc, 0x0e, 0x00, 0x38, 0x1c, 0x00, 0x70, 0x3f, 0xf8, 0x70, 0x3f, 0xf8, 0xe0, 0x00, 0x39, 0xc0, 0x00, 0x3b, 0x80, 0x00, 0x3f, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x38, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00};
    const uint8_t fanLogo[72] =
        {0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x03, 0xff, 0xc0, 0x07, 0xff, 0xe0, 0x0f, 0x38, 0xf0, 0x1c, 0x38, 0x38, 0x3c, 0x70, 0x1c, 0x3c, 0xff, 0xfc, 0x7e, 0xff, 0xfe, 0x7f, 0xc3, 0x8e, 0x77, 0xc3, 0x8e, 0x63, 0x81, 0xc6, 0x63, 0x81, 0xc6, 0x71, 0xc3, 0xee, 0x71, 0xc3, 0xfe, 0x7f, 0xff, 0x7e, 0x3f, 0xff, 0x3c, 0x38, 0x0e, 0x3c, 0x1c, 0x1c, 0x38, 0x0f, 0x1c, 0xf0, 0x07, 0xfb, 0xe0, 0x03, 0xff, 0xc0, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00};
    const uint8_t thermometerLogo[72] =
        {0x00, 0x7c, 0x00, 0x00, 0xfe, 0x00, 0x00, 0xee, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x00, 0xc6, 0x00, 0x01, 0xc7, 0x00, 0x03, 0x83, 0x80, 0x03, 0x01, 0x80, 0x03, 0x01, 0x80, 0x03, 0x01, 0x80, 0x03, 0x83, 0x80, 0x01, 0xcf, 0x00, 0x01, 0xff, 0x00, 0x00, 0x7c, 0x00};
    const uint8_t shutdownLogo[72] =
        {0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x00, 0x18, 0x00, 0x04, 0x18, 0x20, 0x0e, 0x18, 0x70, 0x0e, 0x18, 0x70, 0x1c, 0x18, 0x38, 0x38, 0x18, 0x1c, 0x38, 0x18, 0x1c, 0x38, 0x18, 0x1c, 0x30, 0x18, 0x0c, 0x30, 0x00, 0x0c, 0x38, 0x00, 0x1c, 0x38, 0x00, 0x1c, 0x38, 0x00, 0x1c, 0x1c, 0x00, 0x38, 0x0e, 0x00, 0x70, 0x0f, 0x00, 0xf0, 0x07, 0xc3, 0xe0, 0x01, 0xff, 0x80, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00};

    // void displayAwake() {}

    void splashScreen();
    void mainMenuInput();
    void mainMenuOutput();
    void mainMenuBattery();
    void mainMenuSettings();

    void settingInputMode();
    void settingChargingMode();
    void settingBatteryMax();
    void settingBatteryMin();
    void settingChargingCurrent();
    void settingCollingFan();
    void settingFanTemperature();
    void settingShutdownTemperature();
    void settingWifi();
    void settingFactoryReset();
    bool selectedPush();

    void exit();
};

#endif